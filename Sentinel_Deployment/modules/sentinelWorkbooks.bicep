param workbookDisplayNameIncidentManagement string = 'Microsoft DLP Incident Management'
param workbookDisplayNameActivity string = 'Microsoft DLP Activity'
param workbookDisplayNameOrganization string = 'Microsoft DLP Organizational Context'

param workbookType string = 'sentinel'

@description('The id of resource instance to which the workbook will be associated')
param workbookSourceId string

param workbookIdIncidentManagement string = newGuid()
param workbookIdActivity string = newGuid()
param workbookIdOrganization string = newGuid()

resource workbookIncidentManagement 'microsoft.insights/workbooks@2022-04-01' = {
  name: workbookIdIncidentManagement
  location: resourceGroup().location
  kind: 'shared'
  properties: {
    displayName: workbookDisplayNameIncidentManagement
    serializedData: '{"version":"Notebook/1.0","items":[{"type":1,"content":{"json":"## Microsoft Purview DLP Incident Management"},"name":"text - 2"},{"type":9,"content":{"version":"KqlParameterItem/1.0","parameters":[{"id":"264afe85-711d-483d-a208-af021b3fcfc2","version":"KqlParameterItem/1.0","name":"paramWorkspace","label":"Sentinel Workspace","type":5,"isRequired":true,"query":"resources\\r\\n| where type contains \\"microsoft.operationalinsights/workspaces\\"\\r\\n| extend id = tolower(id)\\r\\n| summarize by id=tolower(id)\\r\\n| project id","crossComponentResources":["value::all"],"typeSettings":{"additionalResourceOptions":[],"showDefault":false},"queryType":1,"value":"/subscriptions/46db4fa1-a60c-4cbd-be28-807c0c4ea04f/resourcegroups/rg-dlp-otzmx/providers/microsoft.operationalinsights/workspaces/sentintelotzmx"},{"id":"b8b136a2-f4bf-42c8-babc-902b8ff6cc6d","version":"KqlParameterItem/1.0","name":"paramTimeRange","label":"Incident Modified Time","type":4,"isRequired":true,"typeSettings":{"selectableValues":[{"durationMs":300000},{"durationMs":900000},{"durationMs":1800000},{"durationMs":3600000},{"durationMs":14400000},{"durationMs":43200000},{"durationMs":86400000},{"durationMs":172800000},{"durationMs":259200000},{"durationMs":604800000},{"durationMs":1209600000},{"durationMs":2419200000},{"durationMs":2592000000},{"durationMs":5184000000},{"durationMs":7776000000}],"allowCustom":true},"value":{"durationMs":7776000000}},{"id":"c10ac340-1c5d-4273-8d4f-04aeb6f7736d","version":"KqlParameterItem/1.0","name":"paramProduct","label":"Product","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"SecurityIncident\\r\\n| where TimeGenerated {paramTimeRange} and Status != \'Deleted\'\\r\\n| extend Product = tostring(parse_json(tostring(AdditionalData.alertProductNames))[0])\\r\\n| summarize Count=count(IncidentNumber) by Product = case (Product ==\\"\\", \\"Undefined\\", Product)\\r\\n| project Value = Product, Label = Product, Selected = iff(Product == \'Microsoft Data Loss Prevention (Custom)\', true, false) ","crossComponentResources":["{paramWorkspace}"],"isHiddenWhenLocked":true,"typeSettings":{"additionalResourceOptions":["value::all"],"showDefault":false},"queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"79d64d60-f4ed-4ed4-ab93-de72d0ee74a5","version":"KqlParameterItem/1.0","name":"paramStatus","label":"Incident Status","type":2,"multiSelect":true,"quote":"\'","delimiter":",","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"all","showDefault":false},"jsonData":"[\\r\\n    {\\"value\\": \\"New\\", \\"selected\\": true}, \\r\\n    {\\"value\\": \\"Active\\", \\"selected\\": true},\\r\\n    {\\"value\\": \\"Closed\\", \\"selected\\": false}\\r\\n]","timeContext":{"durationMs":7776000000},"timeContextFromParameter":"paramTimeRange","value":["New","Active"]},{"id":"75803958-4d09-442e-a143-4005d267d0d7","version":"KqlParameterItem/1.0","name":"paramClassification","label":"Incident Classification","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"let product = dynamic([{paramProduct}]);\\r\\n\\r\\nSecurityIncident\\r\\n| where TimeGenerated {paramTimeRange} and Status != \'Deleted\'\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| where Product in (product) or \\"*\\" in (product)\\r\\n| summarize by Classification\\r\\n| where Classification != \'\'","crossComponentResources":["{paramWorkspace}"],"typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"all","showDefault":false},"timeContext":{"durationMs":0},"timeContextFromParameter":"paramTimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"17aca97f-01e3-4012-ac2c-8167f6a4353b","version":"KqlParameterItem/1.0","name":"paramWorkload","label":"Workload","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"let product = dynamic([{paramProduct}]);\\r\\n\\r\\nSecurityIncident\\r\\n| where TimeGenerated {paramTimeRange} and Status != \'Deleted\'\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| where Product in (product) or \\"*\\" in (product)\\r\\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\\r\\n| mv-expand AlertIds\\r\\n| extend AlertId = tostring(AlertIds)\\r\\n| join kind=leftouter (SecurityAlert | where TimeGenerated {paramTimeRange} | summarize arg_max(TimeGenerated, *) by SystemAlertId) on $left.AlertId == $right.SystemAlertId\\r\\n| extend Workload = parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).Workload[0]\\r\\n| summarize by tostring(Workload), Label = iff(Workload == \'MicrosoftTeams\', \'Microsoft Teams\', Workload)\\r\\n| where Workload != \'\'","crossComponentResources":["{paramWorkspace}"],"typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"all","showDefault":false},"defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"c9768571-fcde-4d64-9a1b-f8339e6f21a7","version":"KqlParameterItem/1.0","name":"paramMatchCount","label":"Match Count GTE","type":1,"query":"print(\'0\')","typeSettings":{"paramValidationRules":[{"regExp":"/^\\\\d+$/","match":false,"message":"Please provide a number value."}]},"queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"38428091-9cd9-423f-aa0c-b67f4129e807","version":"KqlParameterItem/1.0","name":"paramSubscriptionId","type":1,"query":"let workspaceId = datatable(data:string) [\'{paramWorkspace}\'];\\r\\n\\r\\nworkspaceId\\r\\n| extend SubscriptionId = split(data, \'/\')[2]\\r\\n| project SubscriptionId","crossComponentResources":["{paramWorkspace}"],"isHiddenWhenLocked":true,"queryType":0,"resourceType":"microsoft.resources/subscriptions"},{"id":"3a92ac27-d518-486c-b521-0c19b0cc2542","version":"KqlParameterItem/1.0","name":"paramRgName","type":1,"query":"let workspaceId = datatable(data:string) [\'{paramWorkspace}\'];\\r\\n\\r\\nworkspaceId\\r\\n| extend RgName = split(data, \'/\')[4]\\r\\n| project RgName","crossComponentResources":["{paramWorkspace}"],"isHiddenWhenLocked":true,"queryType":0,"resourceType":"microsoft.resources/resourcegroups"}],"style":"pills","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},"name":"parametersMain"},{"type":9,"content":{"version":"KqlParameterItem/1.0","parameters":[{"id":"99d21c0f-2d6c-40a7-a8ad-eb3ec663f544","version":"KqlParameterItem/1.0","name":"paramIncidents","type":1,"query":"{\\"version\\":\\"ARMEndpoint/1.0\\",\\"data\\":null,\\"headers\\":[],\\"method\\":\\"GET\\",\\"path\\":\\"/subscriptions/{paramSubscriptionId}/resourceGroups/{paramRgName}/providers/Microsoft.OperationalInsights/workspaces/{paramWorkspace:label}/providers/Microsoft.SecurityInsights/incidents?api-version=2023-05-01-preview&$orderby=properties/lastModifiedTimeUtc desc&$top=1000&$filter=properties/lastModifiedTimeUtc gt {paramTimeRange:startISO}\\",\\"urlParams\\":[],\\"batchDisabled\\":false,\\"transformers\\":[{\\"type\\":\\"jsonpath\\"}]}","timeContext":{"durationMs":86400000},"queryType":12}],"style":"pills","queryType":12},"conditionalVisibility":{"parameterName":"paramWorkspace","comparison":"isEqualTo","value":"67585678"},"name":"parametersHidden"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let status = dynamic([{paramStatus}]);\\r\\nlet classification = dynamic([{paramClassification}]);\\r\\nlet workload = dynamic([{paramWorkload}]);\\r\\nlet product = dynamic([{paramProduct}]);\\r\\nlet matchCountTrigger = {paramMatchCount};\\r\\n\\r\\nlet data = SecurityIncident\\r\\n| where TimeGenerated {paramTimeRange}\\r\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0]))\\r\\n| where Product in (product) or \\"*\\" in (product)\\r\\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\\r\\n| where Status in (status) or \'all\' in (status) \\r\\n| where Classification in (classification) or \'all\' in (classification)\\r\\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\\r\\n| mv-expand AlertIds\\r\\n| extend AlertId = tostring(AlertIds)\\r\\n| join kind=leftouter (SecurityAlert | where TimeGenerated {paramTimeRange} | summarize arg_max(TimeGenerated, *) by SystemAlertId\\r\\n    | extend EventId = substring(AlertLink, indexof(AlertLink, \'eventid=\') + 8, indexof(AlertLink, \'&creationtime\') - indexof(AlertLink, \'eventid=\') - 8)\\r\\n    | extend Workload = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).Workload[0])\\r\\n    | extend User = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).User[0])\\r\\n    | extend Actions = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).ActionsTaken[0])\\r\\n    | extend MatchCount = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).MatchCount[0])\\r\\n    | extend PolicyName = AlertName\\r\\n    | extend AlertStatus = Status) on $left.AlertId == $right.SystemAlertId\\r\\n| extend IncidentNumber = tostring(IncidentNumber)\\r\\n| extend IncidentArmId = strcat(\'{paramWorkspace}/providers/Microsoft.SecurityInsights/Incidents/\', IncidentName)\\r\\n| where Workload in (workload) or \'all\' in (workload)\\r\\n| where toint(MatchCount) >= matchCountTrigger\\r\\n| order by TimeGenerated;\\r\\n\\r\\ndata\\r\\n| summarize arg_max(TimeGenerated, *), Count = count() by SystemAlertId\\r\\n| project Type = \'Alert\', ID = int(null), Title = AlertName, CreatedTime = StartTime, LastUpdateTime = ProcessingEndTime, IdField = strcat(IncidentNumber, \'/\', SystemAlertId), Parent = IncidentNumber, Status = AlertStatus, Owner = \'\', Severity = AlertSeverity, Link = AlertLink, Workload, MatchCount, User, Actions, IncidentArmId\\r\\n| union (data\\r\\n    | summarize Count = count(), MatchCount = tostring(max(toint(MatchCount))), User = tostring(count_distinct(User)), Workload = tostring(count_distinct(Workload)), arg_max(TimeGenerated, *) by IncidentNumber\\r\\n    | project Type = \'Incident\', ID = toint(IncidentNumber), Title, CreatedTime, LastUpdateTime = LastModifiedTime, IdField = IncidentNumber, Owner = iff(Owner.assignedTo == \'\', \'Unassigned\', tostring(Owner.assignedTo)), Status, Parent = \'\', Severity = strcat(\'(\', Count, \') \', Severity), Workload = strcat(\'(\', Workload, \')\'), Link = IncidentUrl, User = strcat(\'(\', User, \')\'), MatchCount, IncidentArmId)\\r\\n| order by LastUpdateTime\\r\\n\\r\\n\\r\\n","size":3,"title":"DLP Incidents","timeContextFromParameter":"paramTimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","crossComponentResources":["{paramWorkspace}"],"gridSettings":{"formatters":[{"columnMatch":"ID","formatter":7,"formatOptions":{"linkTarget":"OpenBlade","bladeOpenContext":{"bladeName":"IncidentPage.ReactView","extensionName":"Microsoft_Azure_Security_Insights","bladeParameters":[{"name":"incidentArmId","source":"column","value":"IncidentArmId"}]}}},{"columnMatch":"IdField","formatter":5},{"columnMatch":"Parent","formatter":5},{"columnMatch":"Title","formatter":7,"formatOptions":{"linkTarget":"OpenBlade","linkIsContextBlade":true,"bladeOpenContext":{"bladeName":"IncidentPage.ReactView","extensionName":"Microsoft_Azure_Security_Insights","bladeParameters":[{"name":"incidentArmId","source":"column","value":"IncidentArmId"}]}}},{"columnMatch":"Severity","formatter":18,"formatOptions":{"thresholdsOptions":"icons","thresholdsGrid":[{"operator":"contains","thresholdValue":"High","representation":"Sev0","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Medium","representation":"Sev1","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Low","representation":"Sev2","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Informational","representation":"Sev3","text":"{0}{1}"},{"operator":"Default","thresholdValue":null,"representation":"Sev0","text":"{0}{1}"}]}},{"columnMatch":"Link","formatter":5,"formatOptions":{"linkTarget":"Url","linkLabel":"Open"}},{"columnMatch":"IncidentArmId","formatter":5}],"rowLimit":10000,"hierarchySettings":{"idColumn":"IdField","parentColumn":"Parent","treeType":0,"expanderColumn":"Severity"},"sortBy":[{"itemKey":"CreatedTime","sortOrder":2}],"labelSettings":[{"columnId":"CreatedTime","label":"Created Time"},{"columnId":"LastUpdateTime","label":"Last Update Time"},{"columnId":"Workload","label":"Workloads"},{"columnId":"MatchCount","label":"Match Count"},{"columnId":"User","label":"Users"}]},"sortBy":[{"itemKey":"CreatedTime","sortOrder":2}]},"conditionalVisibility":{"parameterName":"paramWorkspace","comparison":"isEqualTo","value":"999999999999"},"name":"queryDlpAlertsOld"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let status = dynamic([{paramStatus}]);\\r\\nlet classification = dynamic([{paramClassification}]);\\r\\nlet workload = dynamic([{paramWorkload}]);\\r\\nlet product = dynamic([{paramProduct}]);\\r\\nlet matchCountTrigger = {paramMatchCount};\\r\\n\\r\\nlet IncidentData = datatable(data:string) [\'{paramIncidents}\'];\\r\\n\\r\\nlet Incidents = IncidentData\\r\\n| extend replace = replace_string(data, \'\\"\\"\', \'\\"\')\\r\\n| extend json = parse_json(replace)\\r\\n| mv-expand json\\r\\n| extend IncidentNumber = tostring(parse_json(tostring(json.properties)).incidentNumber)\\r\\n| extend Title = tostring(parse_json(tostring(json.properties)).[\\"title\\"])\\r\\n| extend Status = tostring(parse_json(tostring(json.properties)).status)\\r\\n| extend Classification = tostring(parse_json(tostring(json.properties)).classification)\\r\\n| extend Severity = tostring(parse_json(tostring(json.properties)).severity)\\r\\n| extend IncidentUrl = tostring(parse_json(tostring(json.properties)).incidentUrl)\\r\\n| extend Owner = tostring(parse_json(tostring(json.properties)).owner.assignedTo)\\r\\n| extend IncidentName = tostring(json.name)\\r\\n| extend CreatedTime = todatetime(parse_json(tostring(json.properties)).createdTimeUtc)\\r\\n| extend LastModifiedTime = todatetime(parse_json(tostring(json.properties)).lastModifiedTimeUtc)\\r\\n| extend Product = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(json.properties)).additionalData)).alertProductNames))[0])\\r\\n| where Product in (product) or \\"*\\" in (product)\\r\\n| where Status in (status) or \'all\' in (status) \\r\\n| where Classification in (classification) or \'all\' in (classification)\\r\\n| join kind=leftouter (SecurityIncident | where TimeGenerated {paramTimeRange} | summarize arg_max(TimeGenerated, *) by tostring(IncidentNumber)) on IncidentNumber\\r\\n| mv-expand AlertIds\\r\\n| extend AlertId = tostring(AlertIds)\\r\\n| join kind=leftouter (SecurityAlert | where TimeGenerated {paramTimeRange} | summarize arg_max(TimeGenerated, *) by SystemAlertId\\r\\n    | extend EventId = substring(AlertLink, indexof(AlertLink, \'eventid=\') + 8, indexof(AlertLink, \'&creationtime\') - indexof(AlertLink, \'eventid=\') - 8)\\r\\n    | extend Workload = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).Workload[0])\\r\\n    | extend User = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).User[0])\\r\\n    | extend Actions = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).ActionsTaken[0])\\r\\n    | extend MatchCount = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\\"Custom Details\\"])).MatchCount[0])\\r\\n    | extend PolicyName = AlertName\\r\\n    | extend AlertStatus = Status) on $left.AlertId == $right.SystemAlertId\\r\\n| extend IncidentArmId = strcat(\'{paramWorkspace}/providers/Microsoft.SecurityInsights/Incidents/\', IncidentName)\\r\\n| where Workload in (workload) or \'all\' in (workload)\\r\\n| where toint(MatchCount) >= matchCountTrigger;\\r\\n\\r\\nIncidents\\r\\n| summarize arg_max(TimeGenerated, *), Count = count() by SystemAlertId\\r\\n| project Type = \'Alert\', ID = int(null), Title = AlertName, CreatedTime = StartTime, LastUpdateTime = ProcessingEndTime, IdField = strcat(IncidentNumber, \'/\', SystemAlertId), Parent = IncidentNumber, Status = AlertStatus, Owner = \'\', Severity = AlertSeverity, Link = AlertLink, Workload, MatchCount, User, Actions, IncidentArmId\\r\\n| union (Incidents\\r\\n    | summarize Count = count(), MatchCount = tostring(max(toint(MatchCount))), User = tostring(count_distinct(User)), Workload = tostring(count_distinct(Workload)), arg_max(TimeGenerated, *) by IncidentNumber\\r\\n    | project Type = \'Incident\', ID = toint(IncidentNumber), Title, CreatedTime, LastUpdateTime = LastModifiedTime, IdField = IncidentNumber, Owner = iff(Owner == \'\', \'Unassigned\', tostring(Owner)), Status, Parent = \'\', Severity = strcat(\'(\', Count, \') \', Severity), Workload = strcat(\'(\', Workload, \')\'), Link = IncidentUrl, User = strcat(\'(\', User, \')\'), MatchCount, IncidentArmId)\\r\\n| order by LastUpdateTime\\r\\n\\r\\n\\r\\n","size":3,"title":"DLP Incidents","timeContextFromParameter":"paramTimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","crossComponentResources":["{paramWorkspace}"],"gridSettings":{"formatters":[{"columnMatch":"ID","formatter":7,"formatOptions":{"linkTarget":"OpenBlade","linkIsContextBlade":true,"bladeOpenContext":{"bladeName":"IncidentPage.ReactView","extensionName":"Microsoft_Azure_Security_Insights","bladeParameters":[{"name":"incidentArmId","source":"column","value":"IncidentArmId"}]}}},{"columnMatch":"Title","formatter":1,"formatOptions":{"linkColumn":"Link","linkTarget":"Url","linkIsContextBlade":false,"bladeOpenContext":{"bladeName":"IncidentPage.ReactView","extensionName":"Microsoft_Azure_Security_Insights","bladeParameters":[{"name":"incidentArmId","source":"column","value":"IncidentArmId"}]}}},{"columnMatch":"IdField","formatter":5},{"columnMatch":"Parent","formatter":5},{"columnMatch":"Severity","formatter":18,"formatOptions":{"thresholdsOptions":"icons","thresholdsGrid":[{"operator":"contains","thresholdValue":"High","representation":"Sev0","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Medium","representation":"Sev1","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Low","representation":"Sev2","text":"{0}{1}"},{"operator":"contains","thresholdValue":"Informational","representation":"Sev3","text":"{0}{1}"},{"operator":"Default","thresholdValue":null,"representation":"Sev0","text":"{0}{1}"}]}},{"columnMatch":"Link","formatter":5},{"columnMatch":"IncidentArmId","formatter":5}],"rowLimit":10000,"hierarchySettings":{"idColumn":"IdField","parentColumn":"Parent","treeType":0,"expanderColumn":"Severity"},"sortBy":[{"itemKey":"LastUpdateTime","sortOrder":2}],"labelSettings":[{"columnId":"CreatedTime","label":"Created Time"},{"columnId":"LastUpdateTime","label":"Last Update Time"},{"columnId":"Workload","label":"Workloads"},{"columnId":"MatchCount","label":"Match Count"},{"columnId":"User","label":"Users"}]},"sortBy":[{"itemKey":"LastUpdateTime","sortOrder":2}]},"name":"queryDlpIncidents"}],"isLocked":false,"fallbackResourceIds":["/subscriptions/46db4fa1-a60c-4cbd-be28-807c0c4ea04f/resourcegroups/rg-dlp-otzmx/providers/microsoft.operationalinsights/workspaces/sentintelotzmx"],"fromTemplateId":"sentinel-UserWorkbook"}'
    version: '1.0'
    sourceId: workbookSourceId
    category: workbookType
  }
  dependsOn: []
}

resource workbookActivity 'microsoft.insights/workbooks@2022-04-01' = {
  name: workbookIdActivity
  location: resourceGroup().location
  kind: 'shared'
  properties: {
    displayName: workbookDisplayNameActivity
    serializedData: '{"version":"Notebook/1.0","items":[{"type":9,"content":{"version":"KqlParameterItem/1.0","parameters":[{"id":"36a4172e-0e49-4884-b2a2-2281528a2ff4","version":"KqlParameterItem/1.0","name":"TimeRange","type":4,"isRequired":true,"value":{"durationMs":7776000000},"typeSettings":{"selectableValues":[{"durationMs":300000},{"durationMs":900000},{"durationMs":1800000},{"durationMs":3600000},{"durationMs":14400000},{"durationMs":43200000},{"durationMs":86400000},{"durationMs":172800000},{"durationMs":259200000},{"durationMs":604800000},{"durationMs":1209600000},{"durationMs":2419200000},{"durationMs":2592000000},{"durationMs":5184000000},{"durationMs":7776000000}],"allowCustom":true},"label":"Time Range"},{"id":"4e1b6539-9788-43e2-a283-4891f33f1677","version":"KqlParameterItem/1.0","name":"Operations","type":2,"isRequired":true,"multiSelect":true,"quote":"\'","delimiter":",","query":"OfficeActivity\\r\\n| where OfficeWorkload in (\'SharePoint\', \'OneDrive\', \'Exchange\', \'MicrosoftTeams\')\\r\\n| summarize Count = count() by Operation\\r\\n| order by Count desc, Operation asc\\r\\n| project Value = Operation, Label = strcat(Operation, \' - \', Count)","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"e2b700d7-d218-47db-9521-52176ed43005","version":"KqlParameterItem/1.0","name":"Users","type":2,"isRequired":true,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| where UserPrincipalName != \\"\\"\\r\\n| summarize Count = count() by UserPrincipalName\\r\\n| order by Count desc, UserPrincipalName asc\\r\\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, \' - \', Count)","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"fee19597-ebc1-4f26-bc82-1284e9111625","version":"KqlParameterItem/1.0","name":"Policy","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| where PolicyName != \\"\\"\\r\\n| summarize Count = count() by PolicyName\\r\\n| order by Count desc, PolicyName asc\\r\\n| project Value = PolicyName, Label = strcat(PolicyName, \' - \', Count)\\r\\n","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"}],"style":"pills","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},"name":"parameters - 1"},{"type":1,"content":{"json":"## **DLP Workloads**"},"name":"text - 0"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let data = PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserPrincipalName in ({Users})\\r\\n| where \\"{Policy:label}\\"==\\"All\\" or PolicyName in ({Policy});\\r\\n\\r\\ndata\\r\\n| summarize Count = count() by Workload\\r\\n| join kind = fullouter (datatable(Workload:string)[\'SharePoint\', \'OneDrive\']) on Workload\\r\\n| project Workload = iff(Workload == \'\', Workload1, Workload), Count = iff(Workload == \'\', 0, Count)\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on CreationTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Workload)\\r\\n    on Workload\\r\\n| project-away Workload1, CreationTime\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count() \\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on CreationTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n    | extend Workload = \'All\'\\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\\r\\n","size":4,"timeContextFromParameter":"TimeRange","exportFieldName":"Workload","exportParameterName":"SelectedWorkload","exportDefaultValue":"All","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"tiles","tileSettings":{"titleContent":{"columnMatch":"Workload","formatter":1},"leftContent":{"columnMatch":"Count","formatter":12,"formatOptions":{"palette":"auto"},"numberFormat":{"unit":17,"options":{"maximumSignificantDigits":3,"maximumFractionDigits":2}}},"secondaryContent":{"columnMatch":"Trend","formatter":9,"formatOptions":{"min":0,"palette":"coldHot"}},"showBorder":false}},"customWidth":"50","name":"query - 10"},{"type":1,"content":{"json":"## DLP Policy Overview"},"name":"text - 11"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let data = PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| extend Policy = PolicyName\\r\\n| extend UserId = UserPrincipalName\\r\\n| where Policy != \\"\\"\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\";\\r\\n\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by Policy\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Policy\\r\\n    | project-away TimeGenerated) on Policy\\r\\n| order by TotalCount desc, Policy asc\\r\\n| project Policy, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by UserId , Policy\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Policy, UserId\\r\\n    | project-away TimeGenerated) on Policy, UserId\\r\\n| order by TotalCount desc, Policy asc\\r\\n| project Policy, UserId, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on Policy\\r\\n| project Id, Name = UserId, Type = \'UserId\', [\'policy Count\'] = TotalCount, Trend,  ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = Policy, Type = \'Policy\', [\'policy Count\'] = TotalCount,  Trend)\\r\\n| order by [\'policy Count\'] desc, Name asc","size":1,"timeContextFromParameter":"TimeRange","exportParameterName":"OperationDetail","exportDefaultValue":"{ \\"Name\\":\\"\\", \\"Type\\":\\"*\\"}","showExportToExcel":true,"queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"formatters":[{"columnMatch":"Id","formatter":5},{"columnMatch":"Trend","formatter":9,"formatOptions":{"min":0,"palette":"gray"}},{"columnMatch":"ParentId","formatter":5},{"columnMatch":"Operations Count","formatter":8,"formatOptions":{"min":0,"palette":"orange"}}],"filter":true,"hierarchySettings":{"idColumn":"Id","parentColumn":"ParentId","treeType":0,"expanderColumn":"Name"},"labelSettings":[{"columnId":"policy Count","label":"Policy Count"}]}},"name":"query - 3"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| extend Policy = PolicyName\\r\\n| extend UserId = UserPrincipalName\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Amount = count() by Policy, bin_at(TimeGenerated, 1d, now()) \\r\\n| sort by Amount ","size":1,"showAnalytics":true,"title":"Policy Hits over time","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"linechart"},"name":"query - 2"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where details.Type == \'*\' or (details.Type == \'Rule\' and Rule == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule, UserId, Policy, TimeGenerated","size":0,"showAnalytics":true,"title":"DLP Rules","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"piechart"},"customWidth":"50","name":"query - 4"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]))\\r\\n| extend exception = ExceptionReason\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| where exception != \\"\\"\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where details.Type == \'*\' or (details.Type == \'Rule\' and Rule == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule","size":0,"showAnalytics":true,"title":"Requested exceptions per rule","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"piechart"},"customWidth":"50","name":"query - 5"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]), true)\\r\\n| extend severity = RuleSeverity\\r\\n| extend File = iff(Workload in (\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\"), Filename, EmailSubject)\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where Policy != \'\' \\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by File, Workload, severity, UserId, Policy, bin(TimeGenerated, 1d)\\r\\n| order by Number, TimeGenerated","size":1,"title":"File/Message Details","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"filter":true,"sortBy":[{"itemKey":"UserId","sortOrder":2}],"labelSettings":[{"columnId":"File","label":"File/Subject"},{"columnId":"severity","label":"Severity"},{"columnId":"UserId","label":"User"},{"columnId":"TimeGenerated","label":"Time Generated"},{"columnId":"Number","label":"Count"}]},"sortBy":[{"itemKey":"UserId","sortOrder":2}]},"customWidth":"50","name":"query - 6"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]), true)\\r\\n| extend severity = RuleSeverity\\r\\n| extend exception = ExceptionReason\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| where exception != \\"\\"\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule, Workload, severity, exception, ExceptionJustification, UserId, Policy, bin(TimeGenerated, 1d)\\r\\n| order by Number, TimeGenerated","size":1,"title":"DLP Exception Information","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"filter":true,"labelSettings":[{"columnId":"severity","label":"Severity"},{"columnId":"exception","label":"Exception"},{"columnId":"ExceptionJustification","label":"Justification"},{"columnId":"TimeGenerated","label":"Time Generated"},{"columnId":"Number","label":"Count"}]},"sortBy":[]},"customWidth":"50","name":"query - 7"},{"type":1,"content":{"json":"## Workload Operations"},"name":"text - 12"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let data = OfficeActivity\\r\\n| where \\"{Operations:lable}\\"==\\"All\\" or Operation in ({Operations})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where OfficeWorkload in (\'SharePoint\', \'OneDrive\', \'Exchange\', \'MicrosoftTeams\') and (\\"{SelectedWorkload}\\"==\\"All\\" or OfficeWorkload==\\"{SelectedWorkload}\\");\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by Operation, OfficeWorkload\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Operation\\r\\n    | project-away TimeGenerated) on Operation\\r\\n| order by TotalCount desc, Operation asc\\r\\n| project Operation, OfficeWorkload, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by SourceFileExtension, OfficeWorkload, Operation\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Operation, OfficeWorkload, SourceFileExtension\\r\\n    | project-away TimeGenerated) on Operation, SourceFileExtension\\r\\n| order by TotalCount desc, Operation asc\\r\\n| project Operation, OfficeWorkload, SourceFileExtension, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on Operation\\r\\n| project Id, Name = iff(OfficeWorkload in (\'SharePoint\', \'OneDrive\'), SourceFileExtension, \'Message\'), OfficeWorkload, Type = \'Source Type\', [\'Operations Count\'] = TotalCount, Trend,  ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = strcat(Operation, \' (\', OfficeWorkload, \')\'), Type = \'Operation\', [\'Operations Count\'] = TotalCount,  Trend)\\r\\n| order by [\'Operations Count\'] desc, Name asc","size":0,"title":"FIle operations","timeContextFromParameter":"TimeRange","exportParameterName":"FileOperations","exportDefaultValue":"{ \\"Name\\":\\"\\", \\"Type\\":\\"*\\"}","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"formatters":[{"columnMatch":"Id","formatter":5},{"columnMatch":"OfficeWorkload","formatter":5},{"columnMatch":"Operations Count","formatter":8,"formatOptions":{"min":0,"palette":"blue"}},{"columnMatch":"Trend","formatter":10,"formatOptions":{"min":0,"palette":"greenDark"}},{"columnMatch":"ParentId","formatter":5}],"filter":true,"hierarchySettings":{"idColumn":"Id","parentColumn":"ParentId","treeType":0,"expanderColumn":"Name"},"sortBy":[{"itemKey":"Name","sortOrder":1}]},"sortBy":[{"itemKey":"Name","sortOrder":1}]},"name":"query - 8"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nlet data = PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Exchange\\", \\"MicrosoftTeams\\", \\"Endpoint\\"]), true)\\r\\n| extend Severity = RuleSeverity\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| extend Filename = iff(Workload in (\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\"), Filename, EmailSubject)\\r\\n| where \\"{Policy:lable}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:lable}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{SelectedWorkload}\\"==\\"All\\" or Workload==\\"{SelectedWorkload}\\"\\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Calls = count() by App = UserId , Request = Filename, Dependency = PolicyName\\r\\n| extend RequestId = strcat(App, \'::\', Request);\\r\\nlet links = data\\r\\n| summarize Calls = sum(Calls) by App, RequestId\\r\\n| project SourceId = App, TargetId = RequestId, Calls, Kind = \'App -> Request\'\\r\\n| union (data\\r\\n    | project SourceId = RequestId, TargetId = Dependency, Calls, Kind = \'Request -> Dependency\');\\r\\nlet nodes = data\\r\\n| summarize Calls = sum(Calls) by App\\r\\n| project Id = App, Name = App, Calls, Kind = \'App\'\\r\\n| union (data\\r\\n    | summarize Calls = sum(Calls) by RequestId, Request\\r\\n    | project Id = RequestId, Name = Request, Calls, Kind = \'Request\')\\r\\n| union (data\\r\\n    | summarize Calls = sum(Calls) by Dependency\\r\\n    | project Id = Dependency, Name = Dependency, Calls, Kind = \'Dependency\');\\r\\nnodes\\r\\n| union (links)","size":3,"timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"graph","gridSettings":{"formatters":[{"columnMatch":"SourceFileName","formatter":7,"formatOptions":{"linkTarget":"GenericDetails","linkIsContextBlade":true,"showIcon":true}},{"columnMatch":"DestinationFileName","formatter":5,"formatOptions":{"showIcon":true}},{"columnMatch":"DestinationFileExtension","formatter":5,"formatOptions":{"showIcon":true}},{"columnMatch":"Number","formatter":8,"formatOptions":{"palette":"lightBlue","showIcon":true}}]},"graphSettings":{"type":0,"topContent":{"columnMatch":"Name","formatter":12},"centerContent":{"columnMatch":"Number","formatter":1,"numberFormat":{"unit":17,"options":{"maximumSignificantDigits":3,"maximumFractionDigits":2}}},"nodeIdField":"Id","sourceIdField":"SourceId","targetIdField":"TargetId","graphOrientation":3,"showOrientationToggles":false,"edgeSize":"Calls","nodeSize":null,"staticNodeSize":100,"colorSettings":{"nodeColorField":"Kind","type":1,"colorPalette":"cool"},"hivesMargin":5},"mapSettings":{"locInfo":"AzureResource","sizeSettings":"Number","sizeAggregation":"Sum","legendMetric":"Number","legendAggregation":"Sum","itemColorSettings":{"type":"heatmap","colorAggregation":"Sum","nodeColorField":"Number","heatmapPalette":"greenRed"}}},"name":"query - 9"}],"isLocked":false,"fallbackResourceIds":["/subscriptions/46db4fa1-a60c-4cbd-be28-807c0c4ea04f/resourcegroups/rg-dlp-06082215/providers/microsoft.operationalinsights/workspaces/sentintel06082215"],"fromTemplateId":"sentinel-UserWorkbook"}'
    version: '1.0'
    sourceId: workbookSourceId
    category: workbookType
  }
  dependsOn: []
}

resource workbookOrganization 'microsoft.insights/workbooks@2022-04-01' = {
  name: workbookIdOrganization
  location: resourceGroup().location
  kind: 'shared'
  properties: {
    displayName: workbookDisplayNameOrganization
    serializedData: '{"version":"Notebook/1.0","items":[{"type":9,"content":{"version":"KqlParameterItem/1.0","parameters":[{"id":"36a4172e-0e49-4884-b2a2-2281528a2ff4","version":"KqlParameterItem/1.0","name":"TimeRange","type":4,"isRequired":true,"value":{"durationMs":7776000000},"typeSettings":{"selectableValues":[{"durationMs":300000},{"durationMs":900000},{"durationMs":1800000},{"durationMs":3600000},{"durationMs":14400000},{"durationMs":43200000},{"durationMs":86400000},{"durationMs":172800000},{"durationMs":259200000},{"durationMs":604800000},{"durationMs":1209600000},{"durationMs":2419200000},{"durationMs":2592000000},{"durationMs":5184000000},{"durationMs":7776000000}],"allowCustom":true},"label":"Time Range"},{"id":"4e1b6539-9788-43e2-a283-4891f33f1677","version":"KqlParameterItem/1.0","name":"Workloads","type":2,"isRequired":true,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP\\r\\n| summarize Count = count() by Workload\\r\\n| order by Count desc, Workload asc\\r\\n| project Value = Workload, Label = strcat(Workload, \' - \', Count)","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"e2b700d7-d218-47db-9521-52176ed43005","version":"KqlParameterItem/1.0","name":"Users","type":2,"isRequired":true,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP\\r\\n| extend User = UserPrincipalName\\r\\n| summarize Count = count() by User\\r\\n| order by Count desc, User asc\\r\\n| project Value = User, Label = strcat(User, \' - \', Count)","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"fee19597-ebc1-4f26-bc82-1284e9111625","version":"KqlParameterItem/1.0","name":"Policy","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP\\r\\n| extend policy = PolicyName\\r\\n| where policy != \\"\\"\\r\\n| summarize Count = count() by policy\\r\\n| order by Count desc, policy asc\\r\\n| project Value = policy, Label = strcat(policy, \' - \', Count)\\r\\n","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"369486e7-72aa-4594-ac79-b0aeb63763d8","version":"KqlParameterItem/1.0","name":"Department","type":2,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP\\r\\n| where department != \\"\\"\\r\\n| summarize Count = count() by department\\r\\n| order by Count desc, department asc\\r\\n| project Value = department, Label = strcat(department, \' - \', Count)\\r\\n","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},{"id":"fcf37b5e-d51d-46e8-b782-4b8b3c661188","version":"KqlParameterItem/1.0","name":"Location","type":2,"isRequired":true,"multiSelect":true,"quote":"\'","delimiter":",","query":"PurviewDLP\\r\\n| where usageLocation != \\"\\"\\r\\n| summarize Count = count() by usageLocation\\r\\n| order by Count desc, usageLocation asc\\r\\n| project Value = usageLocation, Label = strcat(usageLocation, \' - \', Count)","typeSettings":{"additionalResourceOptions":["value::all"],"selectAllValue":"All","showDefault":false},"timeContext":{"durationMs":7776000000},"timeContextFromParameter":"TimeRange","defaultValue":"value::all","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"}],"style":"pills","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces"},"name":"parameters - 1"},{"type":1,"content":{"json":"## **Departments**"},"name":"text - 0"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let data = PurviewDLP\\r\\n| extend department = iff(isempty(department), \\"External\\", department)\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserPrincipalName in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where \\"{Location:Policy}\\"==\\"All\\" or PolicyName in ({Policy})\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or department in ({Department});\\r\\n\\r\\ndata\\r\\n| summarize Count = count() by department\\r\\n| join kind = fullouter (datatable(department:string)[\'Sales & Marketing\', \'Legal\']) on department\\r\\n| project department = iff(department == \'\', department1, department), Count = iff(department == \'\', 0, Count)\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on CreationTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by department)\\r\\n    on department\\r\\n| project-away department1, CreationTime\\r\\n| extend department = department\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count() \\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on CreationTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n            | extend department = \'All\'   \\r\\n)\\r\\n","size":4,"timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"tiles","tileSettings":{"titleContent":{"columnMatch":"department","formatter":1},"leftContent":{"columnMatch":"Count","formatter":12,"formatOptions":{"palette":"auto"},"numberFormat":{"unit":17,"options":{"maximumSignificantDigits":3,"maximumFractionDigits":2}}},"secondaryContent":{"columnMatch":"Trend","formatter":9,"formatOptions":{"min":0,"palette":"coldHot"}},"showBorder":false}},"customWidth":"100","name":"query - 10"},{"type":1,"content":{"json":"## DLP Policy Overview"},"name":"text - 11"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let data = PurviewDLP\\r\\n| extend Department = department\\r\\n| extend manager = tolower(manager)\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend policy = PolicyName\\r\\n| where Department != \\"\\"\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or department in ({Department});\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by Department\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Department\\r\\n    | project-away TimeGenerated) on Department\\r\\n| order by TotalCount desc, Department asc\\r\\n| project Department, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by UserId , Department, manager, usageLocation,policy\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Department, UserId,manager,policy\\r\\n    | project-away TimeGenerated) on Department, UserId,manager,policy\\r\\n| order by TotalCount desc, Department asc\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on Department\\r\\n| project Id, Name = UserId, Type = \'UserId\', [\'Department Count\'] = TotalCount, Trend,  ParentId = Id1, Manager = manager, Policy = policy\\r\\n| union (appData \\r\\n    | project Id, Name = Department, Type = \'Department\', [\'Department Count\'] = TotalCount,  Trend)\\r\\n| order by [\'Department Count\'] desc, Name asc","size":2,"showAnalytics":true,"timeContextFromParameter":"TimeRange","exportParameterName":"OperationDetail","exportDefaultValue":"{ \\"Name\\":\\"\\", \\"Type\\":\\"*\\"}","showExportToExcel":true,"queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"formatters":[{"columnMatch":"Id","formatter":5,"formatOptions":{"showIcon":true}},{"columnMatch":"Operations Count","formatter":8,"formatOptions":{"min":0,"palette":"orange","showIcon":true}},{"columnMatch":"Trend","formatter":9,"formatOptions":{"min":0,"palette":"gray","showIcon":true}},{"columnMatch":"ParentId","formatter":5,"formatOptions":{"showIcon":true}}],"filter":true,"hierarchySettings":{"idColumn":"Id","parentColumn":"ParentId","treeType":0,"expanderColumn":"Name"}}},"name":"query - 3"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP\\r\\n| extend Department = department\\r\\n| extend UserId = UserPrincipalName\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or Department in ({Department})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where details.Type == \'*\' or (details.Type == \'Department\' and Department == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Amount = count() by Department, bin_at(TimeGenerated, 1d, now()) \\r\\n| sort by Amount ","size":1,"showAnalytics":true,"title":"Policy Hits over time","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"linechart"},"name":"query - 2"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| extend Department = department\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or Department in ({Department})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where details.Type == \'*\' or (details.Type == \'Department\' and Department == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule, UserId, Policy, TimeGenerated","size":0,"showAnalytics":true,"title":"DLP Rules","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"piechart"},"customWidth":"50","name":"query - 4"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP\\r\\n| extend exception = ExceptionReason\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| extend Department = department\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or Department in ({Department})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where exception != \\"\\"\\r\\n| where \\"{Policy:Label}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where details.Type == \'*\' or (details.Type == \'Department\' and Department == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule","size":0,"showAnalytics":true,"title":"Requested exceptions per rule","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"piechart"},"customWidth":"50","name":"query - 5"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\", \\"Exchange\\", \\"MicrosoftTeams\\"]), true) \\r\\n| extend severity = RuleSeverity\\r\\n| extend File = iff(Workload in (\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\"), Filename, EmailSubject)\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| where \\"{Policy:Label}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where Policy != \'\' \\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by File, severity, UserId, Policy, bin(TimeGenerated, 1d)\\r\\n| order by Number, TimeGenerated","size":1,"title":"Sites details","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"filter":true,"sortBy":[{"itemKey":"UserId","sortOrder":2}],"labelSettings":[{"columnId":"File","label":"File/Subject"}]},"sortBy":[{"itemKey":"UserId","sortOrder":2}]},"customWidth":"50","name":"query - 6"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\nPurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\", \\"Exchange\\", \\"MicrosoftTeams\\"]), true) \\r\\n| extend severity = RuleSeverity\\r\\n| extend exception = ExceptionReason\\r\\n| extend Rule = RuleName\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| extend Department = department\\r\\n| where exception != \\"\\"\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or Department in ({Department})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where details.Type == \'*\' or (details.Type == \'Department\' and Department == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Number = count() by Rule , severity, ExceptionJustification, exception, UserId, Policy, bin(TimeGenerated, 1d)\\r\\n| order by Number, TimeGenerated","size":1,"title":"DLP Exception Information","timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","gridSettings":{"filter":true},"sortBy":[]},"customWidth":"50","name":"query - 7"},{"type":3,"content":{"version":"KqlItem/1.0","query":"let details = dynamic({OperationDetail});\\r\\n\\r\\nlet data = PurviewDLP(dynamic([\\"SharePoint\\", \\"OneDrive\\", \\"Endpoint\\", \\"Exchange\\", \\"MicrosoftTeams\\"]), true) \\r\\n| extend Severity = RuleSeverity\\r\\n| extend UserId = UserPrincipalName\\r\\n| extend Policy = PolicyName\\r\\n| extend Department = department\\r\\n| where Department != \\"\\"\\r\\n| where \\"{Department:Label}\\"==\\"All\\" or Department in ({Department})\\r\\n| where \\"{Location:Label}\\"==\\"All\\" or usageLocation in ({Location})\\r\\n| where \\"{Policy:Label}\\"==\\"All\\" or Policy in ({Policy})\\r\\n| where \\"{Users:Label}\\"==\\"All\\" or UserId in ({Users})\\r\\n| where details.Type == \'*\' or (details.Type == \'Policy\' and Policy == details.Name) or (details.Type == \'UserId\' and UserId == details.Name)\\r\\n| summarize Calls = count() by App = UserId , Request = Department, Dependency = PolicyName\\r\\n| extend RequestId = strcat(App, \'::\', Request);\\r\\nlet links = data\\r\\n| summarize Calls = sum(Calls) by App, RequestId\\r\\n| project SourceId = App, TargetId = RequestId, Calls, Kind = \'App -> Request\'\\r\\n| union (data\\r\\n    | project SourceId = RequestId, TargetId = Dependency, Calls, Kind = \'Request -> Dependency\');\\r\\nlet nodes = data\\r\\n| summarize Calls = sum(Calls) by App\\r\\n| project Id = App, Name = App, Calls, Kind = \'App\'\\r\\n| union (data\\r\\n    | summarize Calls = sum(Calls) by RequestId, Request\\r\\n    | project Id = RequestId, Name = Request, Calls, Kind = \'Request\')\\r\\n| union (data\\r\\n    | summarize Calls = sum(Calls) by Dependency\\r\\n    | project Id = Dependency, Name = Dependency, Calls, Kind = \'Dependency\');\\r\\nnodes\\r\\n| union (links)","size":2,"timeContextFromParameter":"TimeRange","queryType":0,"resourceType":"microsoft.operationalinsights/workspaces","visualization":"graph","gridSettings":{"formatters":[{"columnMatch":"SourceFileName","formatter":7,"formatOptions":{"linkTarget":"GenericDetails","linkIsContextBlade":true,"showIcon":true}},{"columnMatch":"DestinationFileName","formatter":5,"formatOptions":{"showIcon":true}},{"columnMatch":"DestinationFileExtension","formatter":5,"formatOptions":{"showIcon":true}},{"columnMatch":"Number","formatter":8,"formatOptions":{"palette":"lightBlue","showIcon":true}}]},"graphSettings":{"type":0,"topContent":{"columnMatch":"Name","formatter":12,"formatOptions":{"palette":"blue"}},"centerContent":{"columnMatch":"Calls","formatter":1,"numberFormat":{"unit":17,"options":{"style":"decimal","maximumFractionDigits":2,"maximumSignificantDigits":3}}},"nodeIdField":"Id","sourceIdField":"SourceId","targetIdField":"TargetId","graphOrientation":3,"showOrientationToggles":false,"edgeSize":"Calls","nodeSize":null,"staticNodeSize":100,"colorSettings":{"nodeColorField":"Name","type":1,"colorPalette":"cool"},"hivesMargin":5},"mapSettings":{"locInfo":"AzureResource","sizeSettings":"Number","sizeAggregation":"Sum","legendMetric":"Number","legendAggregation":"Sum","itemColorSettings":{"type":"heatmap","colorAggregation":"Sum","nodeColorField":"Number","heatmapPalette":"greenRed"}}},"name":"query - 9"}],"isLocked":false,"fallbackResourceIds":["/subscriptions/46db4fa1-a60c-4cbd-be28-807c0c4ea04f/resourcegroups/rg-dlp-06082215/providers/microsoft.operationalinsights/workspaces/sentintel06082215"],"fromTemplateId":"sentinel-UserWorkbook"}'
    version: '1.0'
    sourceId: workbookSourceId
    category: workbookType
  }
  dependsOn: []
}
